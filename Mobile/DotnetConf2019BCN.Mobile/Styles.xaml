<?xml version="1.0" encoding="UTF-8" ?>
<ResourceDictionary
  x:Class="DotnetConf2019BCN.Mobile.Styles"
  xmlns="http://xamarin.com/schemas/2014/forms"
  xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
  xmlns:android="clr-namespace:Xamarin.Forms.PlatformConfiguration.AndroidSpecific;assembly=Xamarin.Forms.Core"
  xmlns:cart="clr-namespace:DotnetConf2019BCN.Mobile.Features.Product.Cart"
  xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
  xmlns:local="clr-namespace:DotnetConf2019BCN.Mobile"
  xmlns:product="clr-namespace:DotnetConf2019BCN.Mobile.Features.Product">
  <ResourceDictionary.MergedDictionaries>
    <local:FontStyles />
    <local:Sizes />
  </ResourceDictionary.MergedDictionaries>

  <!--
    Dear Developer,
    
    Here you'll find every named style which can be consumed from +1 places.
    
    Within each group we're trying to sort them alphabetically by their target type, in order to help find them later.
    Please, help us by following this small guideline.
    
    Thanks,
    
    —A Developer
  -->

  <product:PopularItemTemplate x:Key="PopularItemTemplate" />
  <product:PreviouslySeenItemTemplate x:Key="PreviouslySeenItemTemplate" />
  <cart:ProductCartLineItemTemplate x:Key="ProductCartLineItemTemplate" />

  <!--
    Appart from the style it-self, it's used because still don't know why makes the shadows render. Probably it's to do
    with how view properties and styles are applied which acts as a trigger for the shadows.
  -->
  <Style x:Key="ShadowfullBoxViewStyle"
    TargetType="BoxView">
    <Setter Property="BackgroundColor">White</Setter>
  </Style>

  <Style x:Key="DefaultButtonStyle"
    TargetType="Button">
    <Setter Property="BackgroundColor" Value="White" />
    <Setter Property="FontFamily" Value="{StaticResource BrandonGrotesqueMedium}" />
    <Setter Property="FontSize" Value="Medium" />
    <Setter Property="Padding">
      <Thickness
        Left="{StaticResource Default2Margin}"
        Right="{StaticResource Default2Margin}" />
    </Setter>
    <Setter Property="TextColor" Value="{StaticResource AccentColor}" />
  </Style>

  <Style x:Key="AccentColorButtonStyle"
    BasedOn="{StaticResource DefaultButtonStyle}"
    TargetType="Button">
    <Setter Property="BackgroundColor" Value="{StaticResource AccentColor}" />
    <Setter Property="TextColor">White</Setter>
  </Style>

  <Style x:Key="Accent2ColorButtonStyle"
    BasedOn="{StaticResource AccentColorButtonStyle}"
    TargetType="Button">
    <Setter Property="BackgroundColor" Value="{StaticResource Accent2Color}" />
    <Setter Property="CornerRadius">28</Setter>
    <Setter Property="HeightRequest">56</Setter>
  </Style>

  <Style x:Key="DefaultShadowfullButtonStyle"
    BasedOn="{StaticResource DefaultButtonStyle}"
    TargetType="Button">
    <Setter Property="CornerRadius">32</Setter>
    <Setter Property="HeightRequest">64</Setter>
    <Setter Property="android:Button.UseDefaultShadow">true</Setter>
    <Setter Property="ios:VisualElement.IsShadowEnabled">true</Setter>
    <Setter Property="ios:VisualElement.ShadowColor">Black</Setter>
    <Setter Property="ios:VisualElement.ShadowOffset" Value="10,10" />
    <Setter Property="ios:VisualElement.ShadowOpacity">0.2</Setter>
  </Style>

  <Style x:Key="HeaderLabelStyle"
    BasedOn="{StaticResource Header1FontStyle}"
    TargetType="Label">
    <Setter Property="Margin">
      <Thickness
        Left="{StaticResource 2xDefaultMargin}"
        Top="{StaticResource 3xDefaultMargin}"
        Right="{StaticResource 2xDefaultMargin}"
        Bottom="{StaticResource 2xDefaultMargin}" />
    </Setter>
    <Setter Property="HorizontalOptions" Value="Center" />
  </Style>

</ResourceDictionary>